{"version":3,"sources":["components/ConnectedScatterplot.js","components/GameLogsTable.js","images/whipsnakes_logo.png","components/Bio.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ConnectedScatterplot","margin","width","height","renderChart","g","d3","append","attr","text","yLabel","then","data","gameLogs","map","game","tempTime","moment","Date","startTime","format","formattedStartTime","playerEventStats","selectAll","enter","d","x","domain","range","call","y","line","datum","goals","style","dot","join","on","event","selectedGroup","dataFilter","value","transition","duration","charAt","toUpperCase","slice","update","this","property","useEffect","className","id","GameLogsTable","formattedData","season","date","team","opponent","homeTeam","officialId","awayTeam","gamesStarted","onePointGoals","twoPointGoals","assists","penaltyMinutes","pimValue","points","shots","shotsOnGoalPct","toFixed","turnovers","React","useMemo","columns","Header","accessor","sticky","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","i","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Bio","useState","isPersonalDetailsVisible","setIsPersonalDetailsVisible","src","whipsnakesLogo","alt","player","profileUrl","currentTeam","name","jerseyNum","positionName","firstName","lastName","seasonStats","gamesPlayed","onClick","weight","country","college","dob","hometown","getFullYear","expFromYear","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.821c9453.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as d3 from 'd3'\nimport moment from 'moment'\n\nexport default function ConnectedScatterplot() {\n  // set the dimensions and margins of the graph\n  const margin = { top: 10, right: 10, bottom: 60, left: 80 },\n    width = 600 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom\n\n  const renderChart = () => {\n    const svg = d3\n      .select('#my_dataviz')\n      .append('svg')\n      .attr('viewBox', `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\n\n    const g = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n    // X label\n    g.append('text')\n      .attr('class', 'x axis-label')\n      .attr('x', width / 2)\n      .attr('y', height + 50)\n      .attr('font-size', '20px')\n      .attr('text-anchor', 'middle')\n      .text('Date')\n\n    // Y label\n    const yLabel = g\n      .append('text')\n      .attr('class', 'y axis-label')\n      .attr('x', -(height / 2))\n      .attr('y', -40)\n      .attr('font-size', '20px')\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'rotate(-90)')\n      .text('Goals')\n\n    //Read the data\n    d3.json('data/season.json').then((data) => {\n      const gameLogs = data.gameLogs.map((game) => {\n        const tempTime = moment(new Date(game.startTime * 1000)).format('M/DD')\n\n        return {\n          startTime: game.startTime,\n          formattedStartTime: tempTime,\n          ...game.playerEventStats,\n          ...game,\n        }\n      })\n\n      const selectOptions = ['goals', 'assists', 'points']\n\n      // add the options to the button\n      d3.select('.selectButton')\n        .selectAll('myOptions')\n        .data(selectOptions)\n        .enter()\n        .append('option')\n        .text((d) => d) // text showed in the menu\n        .attr('value', (d) => d) // corresponding value returned by the button\n\n      // Add X axis\n      const x = d3\n        .scaleBand()\n        .domain(gameLogs.map((game) => game.formattedStartTime))\n        .range([0, width])\n      g.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x))\n\n      // Add Y axis\n      const y = d3.scaleLinear().domain([0, 10]).range([height, 0])\n      g.append('g').call(d3.axisLeft(y))\n\n      // Initialize line with group a\n      const line = g\n        .append('g')\n        .attr('transform', `translate(40, 0)`)\n        .append('path')\n        .datum(gameLogs)\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => x(d.formattedStartTime))\n            .y((d) => y(+d.goals))\n        )\n        .attr('stroke', 'black')\n        .style('stroke-width', 4)\n        .style('fill', 'none')\n\n      // Initialize dots with group a\n      const dot = g\n        .append('g')\n        .attr('transform', `translate(40, 0)`)\n        .selectAll('circle')\n        .data(gameLogs)\n        .join('circle')\n        .attr('cx', (d) => x(d.formattedStartTime))\n        .attr('cy', (d) => y(+d.goals))\n        .attr('r', 7)\n        .style('fill', '#59c2b1')\n\n      // A function that update the chart\n      function update(selectedGroup) {\n        // Create new data with the selection\n        const dataFilter = gameLogs.map(function (d) {\n          return { formattedStartTime: d.formattedStartTime, value: d[selectedGroup] }\n        })\n\n        // Give these new data to update line\n        line\n          .datum(dataFilter)\n          .transition()\n          .duration(500)\n          .attr(\n            'd',\n            d3\n              .line()\n              .x((d) => x(d.formattedStartTime))\n              .y((d) => y(+d.value))\n          )\n        // Give these new data to update dot\n        dot\n          .data(dataFilter)\n          .transition()\n          .duration(500)\n          .attr('cx', (d) => x(d.formattedStartTime))\n          .attr('cy', (d) => y(+d.value))\n\n        yLabel.text(selectedGroup.charAt(0).toUpperCase() + selectedGroup.slice(1))\n      }\n\n      // // When the button is changed, run the updateChart function\n      d3.select('.selectButton').on('change', function (event, d) {\n        // recover the option that has been chosen\n        let selectedOption = d3.select(this).property('value')\n        // run the updateChart function with this selected option\n        update(selectedOption)\n      })\n    })\n  }\n\n  useEffect(() => {\n    renderChart()\n  }, [])\n\n  return (\n    <div className=\"connected-scatterplot\">\n      <div id=\"my_dataviz\"></div>\n      <div className=\"select__container\">\n        <select className=\"selectButton\"></select>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useTable, useSortBy } from 'react-table'\nimport season from '../data/season.json'\nimport moment from 'moment'\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\n\nexport default function GameLogsTable() {\n  const formattedData = season.gameLogs.map((game) => {\n    return {\n      date: moment(game.startTime * 1000).format('l'),\n      team: 'WHP',\n      opponent: game.homeTeam.officialId === 'WHP' ? game.awayTeam.officialId : game.homeTeam.officialId,\n      gamesStarted: game.playerEventStats.gamesStarted,\n      goals: game.playerEventStats.goals,\n      onePointGoals: game.playerEventStats.onePointGoals,\n      twoPointGoals: game.playerEventStats.twoPointGoals,\n      assists: game.playerEventStats.assists,\n      penaltyMinutes: game.playerEventStats.pimValue,\n      points: game.playerEventStats.points,\n      shots: game.playerEventStats.shots,\n      shotsOnGoalPct: game.playerEventStats.shotsOnGoalPct.toFixed(3),\n      turnovers: game.playerEventStats.turnovers,\n    }\n  })\n\n  const data = React.useMemo(() => formattedData, [])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Date',\n        accessor: 'date',\n        sticky: 'left',\n      },\n      {\n        Header: 'Tm',\n        accessor: 'team',\n      },\n      {\n        Header: 'Opp',\n        accessor: 'opponent',\n      },\n      {\n        Header: 'GS',\n        accessor: 'gamesStarted',\n      },\n      {\n        Header: 'Goals',\n        accessor: 'goals',\n      },\n      {\n        Header: '1PG',\n        accessor: 'onePointGoals',\n      },\n      {\n        Header: '2PG',\n        accessor: 'twoPointGoals',\n      },\n      {\n        Header: 'Assists',\n        accessor: 'assists',\n      },\n      {\n        Header: 'PIM',\n        accessor: 'penaltyMinutes',\n      },\n      {\n        Header: 'Points',\n        accessor: 'points',\n      },\n      {\n        Header: 'Shots',\n        accessor: 'shots',\n      },\n\n      {\n        Header: 'SOG%',\n        accessor: 'shotsOnGoalPct',\n      },\n      {\n        Header: 'TO',\n        accessor: 'turnovers',\n      },\n    ],\n    []\n  )\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data }, useSortBy)\n\n  return (\n    <div className=\"table-container\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup, i) => (\n            <tr key={i} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => (\n                <th key={i} {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <FaChevronDown className=\"chevron\" />\n                      ) : (\n                        <FaChevronUp className=\"chevron\" />\n                      )\n                    ) : (\n                      ''\n                    )}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr key={i} {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return (\n                    <td key={i} {...cell.getCellProps()} style={{}}>\n                      {cell.render('Cell')}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/whipsnakes_logo.21cd72fa.png\";","import React, { useState } from 'react'\nimport player from '../data/player.json'\nimport season from '../data/season.json'\nimport whipsnakesLogo from '../images/whipsnakes_logo.png'\nimport moment from 'moment'\n\nexport default function Bio() {\n  const [isPersonalDetailsVisible, setIsPersonalDetailsVisible] = useState(false)\n\n  return (\n    <main className=\"bio\">\n      <div className=\"bio__top\">\n        <div className=\"images\">\n          <div className=\"team-logo\">\n            <img src={whipsnakesLogo} alt=\"team logo\" />\n          </div>\n          <div className=\"player-logo\">\n            <img src={player.profileUrl} alt=\"player logo\" />\n          </div>\n        </div>\n        <div className=\"basic-info\">\n          <div className=\"team-position text-piped\">\n            <p>{player.currentTeam.name}</p>\n            <p>#{player.currentTeam.jerseyNum}</p>\n            <p>{player.currentTeam.positionName}</p>\n          </div>\n          <div className=\"name\">\n            <h1 className=\"first-name\">{player.firstName}</h1>\n            <h1>{player.lastName}</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"bio__bottom\">\n        <div className=\"stats\">\n          <div className=\"ver-divider\"></div>\n          <div className=\"stat-category border-right\">\n            <p className=\"stats-teamplayer-summary-text\">GP</p>\n            <p className=\"stats-teamplayer-summary-text medium\">{season.seasonStats.gamesPlayed}</p>\n          </div>\n          <div className=\"ver-divider\"></div>\n          <div className=\"stat-category border-right\">\n            <p className=\"stats-teamplayer-summary-text\">GOALS</p>\n            <p className=\"stats-teamplayer-summary-text medium\">{season.seasonStats.goals}</p>\n          </div>\n          <div className=\"ver-divider\"></div>\n          <div className=\"stat-category border-right\">\n            <p className=\"stats-teamplayer-summary-text\">ASSISTS</p>\n            <p className=\"stats-teamplayer-summary-text medium\">{season.seasonStats.assists}</p>\n          </div>\n          <div className=\"ver-divider\"></div>\n          <div className=\"stat-category border-right\">\n            <p className=\"stats-teamplayer-summary-text\">POINTS</p>\n            <p className=\"stats-teamplayer-summary-text medium\">{season.seasonStats.points}</p>\n          </div>\n          <div className=\"ver-divider\"></div>\n        </div>\n        <div className=\"toggle-personal-section\">\n          <button onClick={() => setIsPersonalDetailsVisible(!isPersonalDetailsVisible)}>\n            <p>\n              Player Details <span className={`chevron ${isPersonalDetailsVisible ? 'top' : 'bottom'}`}></span>\n            </p>\n          </button>\n        </div>\n        <div className={`personal ${isPersonalDetailsVisible ? 'is-visible' : ''}`}>\n          <div className=\"personal-section\">\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">HEIGHT</p>\n              <p className=\"stats-teamplayer-summary-text\">{`${player.height}''`}</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">WEIGHT</p>\n              <p className=\"stats-teamplayer-summary-text\">{player.weight}lb</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">COUNTRY</p>\n              <p className=\"stats-teamplayer-summary-text\">{player.country}</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">College</p>\n              <p className=\"stats-teamplayer-summary-text\">{player.college}</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n          </div>\n          <div className=\"hor-divider\"></div>\n          <div className=\"personal-section\">\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">AGE</p>\n              <p className=\"stats-teamplayer-summary-text\">26 years</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">BIRTHDATE</p>\n              <p className=\"stats-teamplayer-summary-text\">{moment(player.dob).format('MMM DD, YYYY')}</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">HOMETOWN</p>\n              <p className=\"stats-teamplayer-summary-text\">{player.hometown}</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n            <div className=\"personal-info border-right\">\n              <p className=\"stats-teamplayer-summary-text small\">EXPERIENCE</p>\n              <p className=\"stats-teamplayer-summary-text\">{new Date().getFullYear() - player.expFromYear} years</p>\n            </div>\n            <div className=\"ver-divider\"></div>\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"footer__content\">\n        <div className=\"footer__content__left\">\n          <div className=\"links company\">\n            <header>League</header>\n            <a href=\"/\">Analysis</a>\n            <a href=\"/\">Teams</a>\n            <a href=\"/\">Players</a>\n            <a href=\"/\">Stats</a>\n            <a href=\"/\">Depth Charts</a>\n          </div>\n          <div className=\"links social\">\n            <header>Company</header>\n            <a href=\"/\">Contact Us</a>\n            <a href=\"/\">Privacy Policy</a>\n            <a href=\"/\">Terms of Use</a>\n          </div>\n        </div>\n        <div className=\"footer__content__right\">\n          <div className=\"copyright\">\n            <p>© 2021 All Rights Reserved.</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport ConnectedScatterplot from './components/ConnectedScatterplot'\nimport GameLogsTable from './components/GameLogsTable'\nimport Bio from './components/Bio'\nimport Footer from './components/Footer'\nimport { FaClipboard } from 'react-icons/fa'\nimport { IoAnalytics } from 'react-icons/io5'\n\nexport default function App() {\n  return (\n    <main>\n      <Bio />\n      <div className=\"page-section\">\n        <div className=\"page-section-header\">\n          <FaClipboard className=\"icon clipboard\" />\n          <h2>2020 Game Log</h2>\n          <hr className=\"mini-line\" />\n        </div>\n        <div className=\"page-section-content block\">\n          <GameLogsTable />\n        </div>\n      </div>\n      <div className=\"page-section\">\n        <div className=\"page-section-header\">\n          <IoAnalytics className=\"icon clipboard\" />\n          <h2>Statistical Graph</h2>\n          <hr className=\"mini-line\" />\n        </div>\n        <div className=\"page-section-content justify-center\">\n          <ConnectedScatterplot />\n        </div>\n      </div>\n      <Footer />\n    </main>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}